## Commands ##

{counter} some commands support counters e.g 3z will "zoom in" three times
{register} store value in a register e.g "aY will copy the selected text in register a
{input} command will display an input e.g M-y "test" will copy the selected text in a register named "test"
{one-key-input}register used right after typing a command e.g tma tab mark as "a" -- use registers for text only, use one-key-input when appropriate
[insert-mode] command is available in insert-mode

### Help ###
    <F1> : Opens help page | showHelp


### Zoom ###
    {counter} z     : Zoom in    | Zoom.in
    {counter} x     : Zoom out   | Zoom.out
    [Zz , Zr]       : Zoom reset | Zoom.reset



### Scrolling ###
    gg          : go to top                  | Scroll.top
    G           : go to bottom               | Scroll.bottom
    0           : go to left                 | Scroll.first
    $           : go to right                | Scroll.last
    {counter} h : scroll left                | Scroll.left
    {counter} j : scroll down                | Scroll.down
    {counter} k : scroll up                  | Scroll.up
    {counter} l : scroll right               | Scroll.right
    {counter} % : scroll to percent of page  | Scroll.toPercent
    J           : Scroll one page up         | Scroll.nextPage
    K           : Scroll one page down       | Scroll.prevPage
    <C-d>       : Scroll half page down      | Scroll.nextHalfPage
    <C-u>       : Scroll half page up        | Scroll.prevHalfPage


### Navigation ###
    ]] Next Page -- DEV (move regex patterns)
    [[ Previous Page -- DEV (move regex patterns)
    {counter} gu Go to parent URL
    gU Go to Root Url
    gy Go to URL in clipboard
    {counter} <C-a> Increment number in URL
    {counter} <C-x> Decrement number in URL
    o Opens a URL -- DEV use history + autocomplete or remove "o" and "O" "tt" "T"

### Hints ###
    {input} f     : starts hint mode with strings only                                                                         | Hint.start_string
    {input} c     : same as "f" but opens in new tab                                                                           | Hint.new_tab_start_string
    {input} <M-s> : same as "f" but after a match is found, we are back in hint mode and the sort order tries to match by href | Hint.new_tab_start_string_repeat
    {input} <M-f> : hint mode with numbers instead of mnemonic keys                                                            | Hint.start


    Sub commands when in {input}:
        @[hint]                                                : copies the URL
        ;[hint]                                                : copies the text
        ,[hint]                                                : focuses on element
        First letter of hint as upper case + Enter             : Opens all links matching the first letter -- DEV
        First letter of hint as upper case + lower case letter : opens link + remove lower case letters and wait for next hints
        >56 + Enter                                            : opens all links with a number greater than 56
        <56 + Enter                                            : opens all links with a number greater than 56
        !foobar + Enter                                        : opens all links not matching text "foobar"  -- DEV
        /foobar  + Enter                                       : opens all links matching text "foobar"  -- DEV


### History ###
    {counter} H : Go back
    {counter} L : Go forward


### Text manipulation --DEV ###
    {register} Y Copy Selected text
    {register} {input} [insert-mode] <M-y> Copies selected into a register -- DEV
    {register} {input} [insert-mode] <M-p> Pastes text from a register into clipboard -- DEV
    <C-y> Creates short URL and copies in clipboard -- DEV review
    {register} yy Copies current URL
    ue Opens url in external editor
    <M-y>
    <M-p>


### Page ###
    Sd           : Toggles custom CSS sheets     | Page.toggleDarkPageExtension
    Si           : Disables images               | Page.disableImages
    So           : Disables objects              | Page.disableObjects
    gs           : View source code in a new tab | Page.viewSourceNewTab
    {counter} gF : Go to next frame              | Page.nextFrame
    gi           : go to first input             | InsertMode.focusFirstTextInput
    ii           : enter edit mode               | InsertMode.enterEditMode




### Tabs manipulation ###
    r                     : reload                                       | Tab.reload
    R                     : reload all tab in current window             | Tab.reloadAll
    tne                   : counts tabs on the right                     | Tab.countRightTabs
    tnq                   : counts tabs on the left                      | Tab.countLeftTabs
    {counter} tw          : closes tab and selects the one on the left   | Tab.close
    tcc                   : Closes all tabs except current               | Tab.closeOtherTabs
    tce                   : Closes all tabs to the right                 | Tab.closeRightTabs
    tcq                   : Closes all tabs to the left                  | Tab.closeLeftTabs
    tcw                   :  Closes all other windows                    | Tab.closeOtherWindows
    tW                    : Closes current window                        | Tab.closeCurrentWindow
    td                    : Detach tab                                   | Tab.detachTab
    {one-key-input} tm    : mark tab                                     | Tab.addMark
    {one-key-input} tt,t` : go to marked tab                             | Tab.gotoMark
    TM                    : Marks a tab for a move                       | Tab.markTabForMove
    tP                    : Moves marked tabs to new location            | Tab.putMarkedTab
    {counter} tq          : Moves tab to the left                        | Tab.moveTabLeft
    {counter} te          : Moves tab to the right                       | Tab.moveTabRight
    {counter} e           : Next tab                                     | Tab.next
    {counter} q           : Previous tab                                 | Tab.prev
    g0,g^                 : Go to first tab                              | Tab.first
    g$                    : Go to last tab                               | Tab.last
    ``                    : Toggle between current and last selected tab | Tab.selectPrevious
    t/                    : search and go to first matched tab           | Tab.
    tc/                   : delete matched tab                           | Buffer.gotoFirstMatch
    tl                    :  pin tab                                     | Tab.pin
    tL                    :  unpins all tabs in current window           | Tab.unpinAll
    tal                   : unpins all tabs in all windows               | Tab.unpinAllWindows
    {counter} tv          :  duplicate tab                               | Tab.duplicate


    tDq  :  Closes and focuses left  -- DEV
    tDe  : Closes and focuses last -- DEV


### Search ###
    / start search
    ? backward search
    n next match
    N previous match
    # match selected text forward
    * match selected text backward


### Insert Mode ###
    <M-s> Toggles webkit speech
    <C-i> Opens external editor
    <M-v> Pass next key
    <C-a>   Move to first words or select all
    <C-d>   Delete forward char
    <C-e>   Move to end
    <C-h>   Delete backward char
    <C-i>   Launch the external editor,default 'editor' is 'gvim -f'.
    <C-k>   Delete forward to the end of the line.
    <C-w>   Delete backward word
    <C-u>   Delete backward to the beginning of the line.
    <M-d>   Delete forward word
    <M-h>   Move back a word
    <M-l>   Move forward a word
    <M-j>   Move back a char
    <M-k>   Move forward a char
    <M-f> go to character (forward)


### Marks -- DEV ###
    {input} M Mark current URL
    {input} go open to Marked URL
    {input} gn open to Marked URL and open in new tab
    {input} ' open marked URL (first match)
    {one-key-input} m Create local mark (page coordinates)
    {one-key-input}` go to local mark


### Macros ###
    {input} <M-q> : Enter name for a macro and start recording. Use `.` to stop | Page.recordMacro
    {input} @ : Enter count + macro name and play | Page.recordMacro

### MISC ###
    : start command line
    <C-z> Disable vrome
    <C-v> Pass next key
    . Run last command -- DEV


### Commands ###
    :help same as F1
    :marks prints all marks
    :clear-marks deletes all marks
    :regs prints all registers
    :clear-regs clears all registers
    :exp exports all data
    :make-links (ml) convert text URL into valid links
