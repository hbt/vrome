#!/usr/bin/env ruby

require 'rubygems'
require 'webrick'
require 'tempfile'
require 'json'
require 'open-uri'

port = 20000

if ARGV[0] =~ /^\d+$/
  port = ARGV[0].to_i
end

class VromeServer < WEBrick::HTTPServlet::AbstractServlet

  def do_POST(request, response)
    request = JSON.parse(request.body)
    status, content_type, body = self.send(request['method'].to_sym,request)

    response.status          = status
    response['Content-Type'] = content_type
    response.body            = body
    response['Content-Type'] = "text/plain"
    response['Access-Control-Allow-Origin'] = '*'
    response['Access-Control-Allow-Methods'] = 'POST'
    response['Access-Control-Allow-Headers'] = 'Content-Type, Cache-Control'
    response['Access-Control-Max-Age'] = 5
  end

  def open_editor(request)
    editor  = request['editor']
    line = request['line'] || 0
    column = request['col'] || 0

    tmpfile = Tempfile.new('editor')
    tmpfile.write request['data']
    tmpfile.flush

    editor = 'gvim -f' if editor == 'gvim' # Foreground: Don't fork when starting GUI
    system("#{editor} #{tmpfile.path} -c 'call cursor(#{line}, #{column})'")
    text = File.read(tmpfile.path)

    return 200, "text/plain", text
  end
 
  def get_latest_version(request)
    filename = File.dirname(File.expand_path(__FILE__)) + "/../../../utils/version.txt"
    version = (File.read(filename)) if File.exists?(filename)
    return 200, "text/plain", version
  end

  def switch_chrome_css(request)
    res = ''
    if(request['filename'])
      content = open(request['filename']) {|f| f.read }
      dir = ENV['HOME'] + "/.config/chromium/Default/User StyleSheets/".gsub("/", File::SEPARATOR)
      # update/create vrome.css file with new content
      vrome_filename = dir + "vrome.css"
      if(content)
        File.open(vrome_filename, 'w') {|f| f.write(content) }
      end
      if File.exists? vrome_filename
        original_filename = dir + "Custom.css"

        # create backup if it doesn't already exist
        content = open(original_filename) {|f| f.read }
        chrome_bak = dir + "chrome.bak.css"

        File.open(chrome_bak, 'w') {|f| f.write(content) } if !File.exists?(chrome_bak)

        # switch files
        bak_content = open(chrome_bak) {|f| f.read }
        if content == bak_content
          # switch content of files vrome => original
          content = open(vrome_filename) {|f| f.read }
          res = "enabled"
        else
          content = bak_content
          res = "disabled"
        end
        File.open(original_filename, 'w') {|f| f.write(content) }
      else
        res = "permission issues"
      end
    end
    return 200, "text/plain", res
  end

  def do_GET(request, response)
    body = ""
    filename = ENV['HOME'] + File::SEPARATOR + '.vromerc'
    body = File.read(filename) if File.exists?(filename) rescue ""

    response.status          = 200
    response['Content-Type'] = "text/plain"
    response.body            = body
  end

end

puts "Starting Vrome server..."

server = WEBrick::HTTPServer.new(:BindAddress => '127.0.0.1', :Port => port)
server.mount "/", VromeServer
trap(:INT) { server.shutdown }
server.start
